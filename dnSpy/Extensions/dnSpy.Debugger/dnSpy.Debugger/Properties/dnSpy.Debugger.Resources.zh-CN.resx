<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBreakpointCommand" xml:space="preserve">
    <value>添加断点(_A)</value>
  </data>
  <data name="AddExceptionCommand" xml:space="preserve">
    <value>添加异常(_X)</value>
  </data>
  <data name="AppDomainNotAvailable" xml:space="preserve">
    <value>&lt; 不可用 &gt;</value>
  </data>
  <data name="AppMenu_Debug" xml:space="preserve">
    <value>调试(_D)</value>
  </data>
  <data name="AppTitle_Debugging" xml:space="preserve">
    <value>调试中</value>
  </data>
  <data name="AskDeleteAllBreakpoints" xml:space="preserve">
    <value>要删除所有的断点吗？</value>
  </data>
  <data name="AttachToProcessCommand" xml:space="preserve">
    <value>附加到进程(_P)...</value>
  </data>
  <data name="Attach_AttachToProcess" xml:space="preserve">
    <value>附加到进程</value>
  </data>
  <data name="Attach_UseDnSpy32" xml:space="preserve">
    <value>请改用64位dnspy 来调试64位应用程序。</value>
  </data>
  <data name="Attach_UseDnSpy64" xml:space="preserve">
    <value>请改用32位dnspy 来调试32位应用程序。</value>
  </data>
  <data name="BreakCommand" xml:space="preserve">
    <value>全部中断(_K)</value>
  </data>
  <data name="BreakpointsCommand" xml:space="preserve">
    <value>断点(_B)</value>
  </data>
  <data name="Button_Attach" xml:space="preserve">
    <value>附加(_A)</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>取消(_C)</value>
  </data>
  <data name="Button_OK" xml:space="preserve">
    <value>确定 (_O)</value>
  </data>
  <data name="Button_Refresh" xml:space="preserve">
    <value>刷新(_R)</value>
  </data>
  <data name="CallStackCommand" xml:space="preserve">
    <value>调用堆栈(_C)</value>
  </data>
  <data name="CallStack_MaxFramesExceeded" xml:space="preserve">
    <value>堆栈帧数量已超出dnSpy所支持的最大值。</value>
  </data>
  <data name="Column_Address" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="Column_AppDomain" xml:space="preserve">
    <value>程序域</value>
  </data>
  <data name="Column_DynamicModule" xml:space="preserve">
    <value>动态</value>
  </data>
  <data name="Column_InMemoryModule" xml:space="preserve">
    <value>内存内</value>
  </data>
  <data name="Column_Module" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="Column_Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Column_OptimizedModule" xml:space="preserve">
    <value>已优化</value>
  </data>
  <data name="Column_Order" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="Column_Path" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="Column_Process" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="Column_ProcessArchitecture" xml:space="preserve">
    <value>架构</value>
  </data>
  <data name="Column_ProcessFilename" xml:space="preserve">
    <value>文件名</value>
  </data>
  <data name="Column_ProcessID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Column_ProcessTitle" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Column_ProcessType" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="Column_ThreadAffinityMask" xml:space="preserve">
    <value>关联掩码</value>
  </data>
  <data name="Column_ThreadCategory" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="Column_ThreadID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Column_ThreadLocation" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="Column_ThreadManagedId" xml:space="preserve">
    <value>托管ID</value>
  </data>
  <data name="Column_ThreadPriority" xml:space="preserve">
    <value>优先级</value>
  </data>
  <data name="Column_ThreadState" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Column_ThreadSuspendedCount" xml:space="preserve">
    <value>挂起项计数</value>
  </data>
  <data name="Column_Timestamp" xml:space="preserve">
    <value>时间戳</value>
  </data>
  <data name="Column_Type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="Column_Value" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="Column_Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="ContinueDebuggingCommand" xml:space="preserve">
    <value>继续(_C)</value>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>复制(_Y)</value>
  </data>
  <data name="DbgAsm_Title" xml:space="preserve">
    <value>调试程序</value>
  </data>
  <data name="DbgSettings_AutoOpenLocalsWindow" xml:space="preserve">
    <value>在调试器启动时显示局部变量窗口</value>
  </data>
  <data name="DbgSettings_DisableDebuggerDetection" xml:space="preserve">
    <value>防止代码检测调试器</value>
  </data>
  <data name="DbgSettings_IgnoreBreakInstructions" xml:space="preserve">
    <value>忽略 Debugger.Break() 和中断指令</value>
  </data>
  <data name="DbgSettings_PropertyEvalAndFunctionCalls" xml:space="preserve">
    <value>启用属性计算和其它隐式函数调用</value>
  </data>
  <data name="DbgSettings_UseMemoryModules" xml:space="preserve">
    <value>调试从进程内存加载的文件（取消选中以使用磁盘文件）</value>
  </data>
  <data name="DbgSettings_UseStringConversionFunction" xml:space="preserve">
    <value>在变量窗口中对对象调用字符串转换方法</value>
  </data>
  <data name="StartDebugging2" xml:space="preserve">
    <value>开始调试(_S)...</value>
  </data>
  <data name="DebuggerOptDlgTab" xml:space="preserve">
    <value>调试器</value>
  </data>
  <data name="DebugProgramX" xml:space="preserve">
    <value>调试 {0} (_D)</value>
  </data>
  <data name="Debug_EventDescription_Exception" xml:space="preserve">
    <value>异常</value>
  </data>
  <data name="Debug_EventDescription_LoadModule1" xml:space="preserve">
    <value>加载模块 DYN={0} MEM={1} {2:X8} {3:X8} {4}</value>
  </data>
  <data name="Debug_EventDescription_LoadModule2" xml:space="preserve">
    <value>加载模块 A={0:X8} S={1:X8} {2}</value>
  </data>
  <data name="Debug_EventDescription_UnhandledException" xml:space="preserve">
    <value>未处理的异常</value>
  </data>
  <data name="DeleteAllBreakpointsCommand" xml:space="preserve">
    <value>删除所有断点(_A)</value>
  </data>
  <data name="DeleteBreakpointCommand" xml:space="preserve">
    <value>删除断点(_E)</value>
  </data>
  <data name="DetachAllCommand" xml:space="preserve">
    <value>分离所有(_L)</value>
  </data>
  <data name="DisableAllBreakpointsCommand" xml:space="preserve">
    <value>禁用所有断点(_N)</value>
  </data>
  <data name="EnableAllBreakpointsCommand" xml:space="preserve">
    <value>启用所有断点(_N)</value>
  </data>
  <data name="EnableBreakpointCommand" xml:space="preserve">
    <value>启用断点(_E)</value>
  </data>
  <data name="EnableBreakpointCommand2" xml:space="preserve">
    <value>启用断点(_L)</value>
  </data>
  <data name="ErrorOccurredX" xml:space="preserve">
    <value>发生错误：

{0}</value>
  </data>
  <data name="Error_CantEvalUnlessDebuggerStopped" xml:space="preserve">
    <value>除非调试器停止，否则无法计算</value>
  </data>
  <data name="Error_CantEvalWhenUnhandledExceptionHasOccurred" xml:space="preserve">
    <value>当未捕捉异常发生时无法计算</value>
  </data>
  <data name="Error_StartWithoutDebuggingCouldNotStart" xml:space="preserve">
    <value>无法启动 '{0}' 
错误: {1}</value>
  </data>
  <data name="ExceptionSettingsCommand" xml:space="preserve">
    <value>异常设置(_X)</value>
  </data>
  <data name="Exceptions_Remove_ToolTip" xml:space="preserve">
    <value>从列表中移除异常</value>
  </data>
  <data name="Exceptions_RestoreSettings_ToolTip" xml:space="preserve">
    <value>恢复列表到默认设置</value>
  </data>
  <data name="Exceptions_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Exceptions_Search_ToolTip" xml:space="preserve">
    <value>查找异常</value>
  </data>
  <data name="Exceptions_ShowOnlyEnabledExceptions_ToolTip" xml:space="preserve">
    <value>仅显示已启用的异常</value>
  </data>
  <data name="FreezeThreadCommand" xml:space="preserve">
    <value>冻结(_F)</value>
  </data>
  <data name="GoToDisassemblyCommand2" xml:space="preserve">
    <value>转到反汇编(_D)</value>
  </data>
  <data name="GoToModuleCommand" xml:space="preserve">
    <value>转到模块(_G)</value>
  </data>
  <data name="HexDisplayCommand" xml:space="preserve">
    <value>十六进制显示(_H)</value>
  </data>
  <data name="LocalsAddWatchCommand" xml:space="preserve">
    <value>添加监视(_W)</value>
  </data>
  <data name="LocalsCollapseChildrenNodesCommand" xml:space="preserve">
    <value>折叠子节点(_C)</value>
  </data>
  <data name="LocalsCollapseParentNodeCommand" xml:space="preserve">
    <value>折叠父节点(_O)</value>
  </data>
  <data name="LocalsCommand" xml:space="preserve">
    <value>局部变量(_L)</value>
  </data>
  <data name="LocalsCopyValueCommand" xml:space="preserve">
    <value>复制值(_L)</value>
  </data>
  <data name="LocalsEditValueCommand" xml:space="preserve">
    <value>编辑值(_E)</value>
  </data>
  <data name="LocalsExpandChildrenNodesCommand" xml:space="preserve">
    <value>展开子节点(_X)</value>
  </data>
  <data name="LocalsSaveCommand" xml:space="preserve">
    <value>保存(_S)...</value>
  </data>
  <data name="LocalsSave_Error_CouldNotSaveDataToFilename" xml:space="preserve">
    <value>保存数据到 '{0}' 错误
错误：{1}</value>
  </data>
  <data name="Locals_Ask_TooManyItems" xml:space="preserve">
    <value>此项目包含有超过 {0} 个子项目。当展开时会限制要显示的项目数量。

您确定要展开它？</value>
  </data>
  <data name="Locals_Error_CantEvaluateWhenThreadIsAtUnsafePoint" xml:space="preserve">
    <value>当线程位于不安全状态时无法计算表达式。按步调试或运行直到触发断点。</value>
  </data>
  <data name="Locals_Error_EvalDisabledCantCallPropsAndMethods" xml:space="preserve">
    <value>当前无法调用属性和方法</value>
  </data>
  <data name="Locals_Error_EvalTimedOutIsDisabled" xml:space="preserve">
    <value>求值已超时并已被禁用，直到您继续调试为止。</value>
  </data>
  <data name="Locals_Error_EvaluationTimedOut" xml:space="preserve">
    <value>求值超时</value>
  </data>
  <data name="MemoryWindowCommand" xml:space="preserve">
    <value>内存(_M)</value>
  </data>
  <data name="ModuleCopyFilenameCommand" xml:space="preserve">
    <value>复制文件名</value>
  </data>
  <data name="ModuleSaveModulesTitle" xml:space="preserve">
    <value>保存模块</value>
  </data>
  <data name="ModuleSaveModuleTitle" xml:space="preserve">
    <value>保存模块</value>
  </data>
  <data name="ModulesCommand" xml:space="preserve">
    <value>模块(_O)</value>
  </data>
  <data name="Module_NoAddress" xml:space="preserve">
    <value>&lt;无地址&gt;</value>
  </data>
  <data name="OpenContainingFolderCommand" xml:space="preserve">
    <value>打开所在文件夹(_O)</value>
  </data>
  <data name="OpenModuleFromMemoryCommand" xml:space="preserve">
    <value>从内存打开模块</value>
  </data>
  <data name="RemoveExceptionCommand" xml:space="preserve">
    <value>移除(_R)</value>
  </data>
  <data name="RenameThreadCommand" xml:space="preserve">
    <value>重命名</value>
  </data>
  <data name="RestartCommand" xml:space="preserve">
    <value>重新开始(_R)</value>
  </data>
  <data name="RestoreDefaultExceptionSettingsCommand" xml:space="preserve">
    <value>恢复默认值</value>
  </data>
  <data name="RunToCursorCommand" xml:space="preserve">
    <value>运行到光标处(_N)</value>
  </data>
  <data name="SaveModuleCommand" xml:space="preserve">
    <value>保存模块...</value>
  </data>
  <data name="SaveModulesCommand" xml:space="preserve">
    <value>保存 {0} 模块...</value>
  </data>
  <data name="SelectAllCommand" xml:space="preserve">
    <value>全选(_A)</value>
  </data>
  <data name="SetNextStatementCommand" xml:space="preserve">
    <value>设为下一条语句(_X)</value>
  </data>
  <data name="ShortCutAltAsterisk" xml:space="preserve">
    <value>Alt + 数字键 *</value>
  </data>
  <data name="ShortCutKeyAlt4" xml:space="preserve">
    <value>Alt+4</value>
  </data>
  <data name="ShortCutKeyAlt6" xml:space="preserve">
    <value>Alt+6</value>
  </data>
  <data name="ShortCutKeyCtrlA" xml:space="preserve">
    <value>Ctrl+A</value>
  </data>
  <data name="ShortCutKeyCtrlAltB" xml:space="preserve">
    <value>Ctrl+Alt+B</value>
  </data>
  <data name="ShortCutKeyCtrlAltC" xml:space="preserve">
    <value>Ctrl+Alt+C</value>
  </data>
  <data name="ShortCutKeyCtrlAltE" xml:space="preserve">
    <value>Ctrl+Alt+E</value>
  </data>
  <data name="ShortCutKeyCtrlAltH" xml:space="preserve">
    <value>Ctrl+Alt+H</value>
  </data>
  <data name="ShortCutKeyCtrlAltP" xml:space="preserve">
    <value>Ctrl+Alt+P</value>
  </data>
  <data name="ShortCutKeyCtrlAltU" xml:space="preserve">
    <value>Ctrl+Alt+U</value>
  </data>
  <data name="ShortCutKeyCtrlShift_DIGIT" xml:space="preserve">
    <value>Ctrl+Shift+{0}</value>
  </data>
  <data name="ShortCutKeyCtrlAltBreak" xml:space="preserve">
    <value>Ctrl+Alt+Break</value>
  </data>
  <data name="ShortCutKeyCtrlC" xml:space="preserve">
    <value>Ctrl+C</value>
  </data>
  <data name="ShortCutKeyCtrlF10" xml:space="preserve">
    <value>Ctrl+F10</value>
  </data>
  <data name="ShortCutKeyCtrlF5" xml:space="preserve">
    <value>Ctrl+F5</value>
  </data>
  <data name="ShortCutKeyCtrlF9" xml:space="preserve">
    <value>Ctrl+F9</value>
  </data>
  <data name="ShortCutKeyCtrlShiftC" xml:space="preserve">
    <value>Ctrl+Shift+C</value>
  </data>
  <data name="ShortCutKeyCtrlShiftF10" xml:space="preserve">
    <value>Ctrl+Shift+F10</value>
  </data>
  <data name="ShortCutKeyCtrlShiftF5" xml:space="preserve">
    <value>Ctrl+Shift+F5</value>
  </data>
  <data name="ShortCutKeyCtrlShiftF9" xml:space="preserve">
    <value>Ctrl+Shift+F9</value>
  </data>
  <data name="ShortCutKeyCtrl_DIGIT" xml:space="preserve">
    <value>Ctrl+{0}</value>
  </data>
  <data name="ShortCutKeyDelete" xml:space="preserve">
    <value>Del</value>
  </data>
  <data name="ShortCutKeyEnter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ShortCutKeyF10" xml:space="preserve">
    <value>F10</value>
  </data>
  <data name="ShortCutKeyF11" xml:space="preserve">
    <value>F11</value>
  </data>
  <data name="ShortCutKeyF2" xml:space="preserve">
    <value>F2</value>
  </data>
  <data name="ShortCutKeyF5" xml:space="preserve">
    <value>F5</value>
  </data>
  <data name="ShortCutKeyF9" xml:space="preserve">
    <value>F9</value>
  </data>
  <data name="ShortCutKeyInsert" xml:space="preserve">
    <value>Ins</value>
  </data>
  <data name="ShortCutKeyShiftF11" xml:space="preserve">
    <value>Shift+F11</value>
  </data>
  <data name="ShortCutKeyShiftF5" xml:space="preserve">
    <value>Shift+F5</value>
  </data>
  <data name="ShowInMemoryWindowCommand" xml:space="preserve">
    <value>在内存窗口中显示</value>
  </data>
  <data name="ShowInstructionPointerCommand" xml:space="preserve">
    <value>显示IP</value>
  </data>
  <data name="ShowModuleNamesCommand" xml:space="preserve">
    <value>显示模块名称(_M)</value>
  </data>
  <data name="ShowNamespacesCommand" xml:space="preserve">
    <value>显示命名空间</value>
  </data>
  <data name="ShowNextStatementCommand" xml:space="preserve">
    <value>显示下一语句(_H)</value>
  </data>
  <data name="ShowDeclaringTypesCommand" xml:space="preserve">
    <value>显示声明类型</value>
  </data>
  <data name="ShowParameterNamesCommand" xml:space="preserve">
    <value>显示参数名称(_P)</value>
  </data>
  <data name="ShowParameterTypesCommand" xml:space="preserve">
    <value>显示参数类型(_T)</value>
  </data>
  <data name="ShowParameterValuesCommand" xml:space="preserve">
    <value>显示参数值(_V)</value>
  </data>
  <data name="ShowReturnTypesCommand" xml:space="preserve">
    <value>显示返回类型</value>
  </data>
  <data name="ShowTokensCommand" xml:space="preserve">
    <value>显示标记</value>
  </data>
  <data name="ShowIntrinsicTypeKeywordsCommand" xml:space="preserve">
    <value>显示内部类型关键字</value>
  </data>
  <data name="StartWithoutDebuggingCommand" xml:space="preserve">
    <value>开始执行(不调试) (_H)</value>
  </data>
  <data name="StatusBar_Ready" xml:space="preserve">
    <value>就绪</value>
  </data>
  <data name="StatusBar_Running" xml:space="preserve">
    <value>运行中...</value>
  </data>
  <data name="StepIntoCommand" xml:space="preserve">
    <value>逐语句(_I)</value>
  </data>
  <data name="StepOutCommand" xml:space="preserve">
    <value>跳出(_T)</value>
  </data>
  <data name="StepOverCommand" xml:space="preserve">
    <value>逐过程(_O)</value>
  </data>
  <data name="StopDebuggingCommand" xml:space="preserve">
    <value>停止调试(_E)</value>
  </data>
  <data name="SwitchToFrameCommand" xml:space="preserve">
    <value>切换到帧(_S)</value>
  </data>
  <data name="SwitchToThreadCommand" xml:space="preserve">
    <value>切换到线程(_S)</value>
  </data>
  <data name="ThawThreadCommand" xml:space="preserve">
    <value>解冻(_T)</value>
  </data>
  <data name="ThreadsCommand" xml:space="preserve">
    <value>线程(_H)</value>
  </data>
  <data name="ThreadType_Main" xml:space="preserve">
    <value>主线程</value>
  </data>
  <data name="ThreadType_Terminated" xml:space="preserve">
    <value>终止的线程</value>
  </data>
  <data name="ThreadType_ThreadPool" xml:space="preserve">
    <value>线程池</value>
  </data>
  <data name="ThreadType_Unknown" xml:space="preserve">
    <value>未知线程</value>
  </data>
  <data name="ThreadType_Worker" xml:space="preserve">
    <value>工作线程</value>
  </data>
  <data name="Thread_LocationNotAvailable" xml:space="preserve">
    <value>&lt; 不可用 &gt;</value>
  </data>
  <data name="Thread_NoName" xml:space="preserve">
    <value>&lt;无名称&gt;</value>
  </data>
  <data name="Thread_Priority_AboveNormal" xml:space="preserve">
    <value>高于正常</value>
  </data>
  <data name="Thread_Priority_BelowNormal" xml:space="preserve">
    <value>低于正常</value>
  </data>
  <data name="Thread_Priority_Highest" xml:space="preserve">
    <value>高</value>
  </data>
  <data name="Thread_Priority_Lowest" xml:space="preserve">
    <value>低</value>
  </data>
  <data name="Thread_Priority_Normal" xml:space="preserve">
    <value>正常</value>
  </data>
  <data name="ToggleBreakpointCommand" xml:space="preserve">
    <value>切换断点(_G)</value>
  </data>
  <data name="ToolBarBreakAllToolTip" xml:space="preserve">
    <value>全部中断</value>
  </data>
  <data name="ToolBarContinueDebuggingButton" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="ToolBarContinueDebuggingToolTip" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="ToolBarDebugAssemblyToolTip" xml:space="preserve">
    <value>调试程序</value>
  </data>
  <data name="ToolBarRestartToolTip" xml:space="preserve">
    <value>重新开始</value>
  </data>
  <data name="ToolBarShowNextStatementToolTip" xml:space="preserve">
    <value>显示下一语句</value>
  </data>
  <data name="ToolBarStartDebuggingButton" xml:space="preserve">
    <value>启动</value>
  </data>
  <data name="ToolBarStepIntoToolTip" xml:space="preserve">
    <value>逐语句</value>
  </data>
  <data name="ToolBarStepOutToolTip" xml:space="preserve">
    <value>跳出</value>
  </data>
  <data name="ToolBarStepOverToolTip" xml:space="preserve">
    <value>逐过程</value>
  </data>
  <data name="ToolBarStopDebuggingToolTip" xml:space="preserve">
    <value>停止调试</value>
  </data>
  <data name="Window_Breakpoints" xml:space="preserve">
    <value>断点</value>
  </data>
  <data name="Window_CallStack" xml:space="preserve">
    <value>调用堆栈</value>
  </data>
  <data name="Window_ExceptionSettings" xml:space="preserve">
    <value>异常设置</value>
  </data>
  <data name="Window_Locals" xml:space="preserve">
    <value>局部变量</value>
  </data>
  <data name="Window_Memory_10_MenuItem" xml:space="preserve">
    <value>内存 1_0</value>
  </data>
  <data name="Window_Memory_N" xml:space="preserve">
    <value>内存 {0}</value>
  </data>
  <data name="Window_Memory_N_MenuItem" xml:space="preserve">
    <value>内存 _{0}</value>
  </data>
  <data name="Window_Memory_N_MenuItem2" xml:space="preserve">
    <value>内存 {0}</value>
  </data>
  <data name="Window_Modules" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="Window_Threads" xml:space="preserve">
    <value>线程</value>
  </data>
  <data name="YesNo_No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="YesNo_Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="DbgSettings_SyntaxHighlight" xml:space="preserve">
    <value>语法高亮</value>
  </data>
  <data name="LoadModulesCommand" xml:space="preserve">
    <value>打开模块</value>
  </data>
  <data name="LoadXModulesCommand" xml:space="preserve">
    <value>打开 {0} 模块</value>
  </data>
  <data name="ShowParameterTypesCommand2" xml:space="preserve">
    <value>显示参数类型</value>
  </data>
  <data name="Plugin_ShortDescription" xml:space="preserve">
    <value>调试器</value>
  </data>
  <data name="DebugLoggerName" xml:space="preserve">
    <value>调试</value>
  </data>
  <data name="ShowExceptionMessages" xml:space="preserve">
    <value>异常消息(_E)</value>
  </data>
  <data name="ShowModuleLoadMessages" xml:space="preserve">
    <value>模块加载消息(_L)</value>
  </data>
  <data name="ShowModuleUnloadMessages" xml:space="preserve">
    <value>模块卸载消息(_U)</value>
  </data>
  <data name="ShowProcessExitMessages" xml:space="preserve">
    <value>进程退出消息(_P)</value>
  </data>
  <data name="ShowProgramOutputMessages" xml:space="preserve">
    <value>程序输出(_O)</value>
  </data>
  <data name="ShowStepFilteringMessages" xml:space="preserve">
    <value>分步过滤信息(_S)</value>
  </data>
  <data name="ShowThreadExitMessages" xml:space="preserve">
    <value>线程退出消息(_T)</value>
  </data>
  <data name="ShowMDAMessages" xml:space="preserve">
    <value>MDA消息</value>
  </data>
  <data name="DebugLogAdditionalInformation" xml:space="preserve">
    <value>其他信息: {0}</value>
  </data>
  <data name="DebugLogExceptionHandled" xml:space="preserve">
    <value>引发异常: '{0}' in {1}</value>
  </data>
  <data name="DebugLogExceptionUnhandled" xml:space="preserve">
    <value>'{0}' 类型的未处理的异常发生在 {1}</value>
  </data>
  <data name="DebugLogExitProcess" xml:space="preserve">
    <value>'{0}' 程序已退出，返回值为 {1} (0x{1:x})。</value>
  </data>
  <data name="DebugLogExitThread" xml:space="preserve">
    <value>线程 0x{0:x} 已退出，返回值为 {1} (0x{1:x})。</value>
  </data>
  <data name="DebugLogLoadModule" xml:space="preserve">
    <value>已加载 '{0}'</value>
  </data>
  <data name="DebugLogMDA" xml:space="preserve">
    <value>托管调试助手 '{0}' 检测到 '{1}' 中的一个问题。</value>
  </data>
  <data name="DebugLogUnloadModule" xml:space="preserve">
    <value>已卸载 '{0}'</value>
  </data>
  <data name="ExceptionMessageIsNull" xml:space="preserve">
    <value>"&lt; 没有异常消息 &gt;"</value>
  </data>
  <data name="GlyphToolTip_Location" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="HexEditorGroup_DebuggerMemory" xml:space="preserve">
    <value>内存窗口</value>
  </data>
  <data name="BgImgDisplayName_DebuggerMemory" xml:space="preserve">
    <value>十六进制编辑器 (内存窗口)</value>
  </data>
  <data name="DbgAsm_DebugEngine" xml:space="preserve">
    <value>调试引擎(_D)</value>
  </data>
  <data name="DebugWindows" xml:space="preserve">
    <value>窗口(_W)</value>
  </data>
  <data name="OutputCommand" xml:space="preserve">
    <value>输出(_O)</value>
  </data>
  <data name="ShortCutKeyCtrlAltW_DIGIT" xml:space="preserve">
    <value>Ctrl+Alt+W, {0}</value>
  </data>
  <data name="TerminateAllCommand" xml:space="preserve">
    <value>终止所有(_M)</value>
  </data>
  <data name="WatchCommand" xml:space="preserve">
    <value>监视(_W)</value>
  </data>
  <data name="Window_Watch_10_MenuItem" xml:space="preserve">
    <value>监视 1_0</value>
  </data>
  <data name="Window_Watch_N" xml:space="preserve">
    <value>监视 {0}</value>
  </data>
  <data name="Window_Watch_N_MenuItem" xml:space="preserve">
    <value>监视 _{0}</value>
  </data>
  <data name="Window_Watch_N_MenuItem2" xml:space="preserve">
    <value>监视 {0}</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>选项(_O)...</value>
  </data>
  <data name="ShortCutKeyCtrlAltZ" xml:space="preserve">
    <value>Ctrl+Alt+Z</value>
  </data>
  <data name="ProcessesCommand" xml:space="preserve">
    <value>进程(_P)</value>
  </data>
  <data name="Window_Processes" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="Column_Debugging" xml:space="preserve">
    <value>调试中</value>
  </data>
  <data name="Column_ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Column_State" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Column_Title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Process_Paused" xml:space="preserve">
    <value>中断</value>
  </data>
  <data name="Process_Running" xml:space="preserve">
    <value>运行中</value>
  </data>
  <data name="Processes_AttachToProcessToolTip" xml:space="preserve">
    <value>附加到进程</value>
  </data>
  <data name="Processes_DetachToolTip" xml:space="preserve">
    <value>分离进程</value>
  </data>
  <data name="Processes_TerminateToolTip" xml:space="preserve">
    <value>终止进程</value>
  </data>
  <data name="ShortCutKeyCtrlF" xml:space="preserve">
    <value>Ctrl+F</value>
  </data>
  <data name="DetachProcessCommand" xml:space="preserve">
    <value>分离进程(_D)</value>
  </data>
  <data name="DetachWhenDebuggingStoppedCommand" xml:space="preserve">
    <value>调试停止时分离(_W)</value>
  </data>
  <data name="TerminateProcessCommand" xml:space="preserve">
    <value>终止进程(_M)</value>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="Column_ProcessName" xml:space="preserve">
    <value>进程名</value>
  </data>
  <data name="AllRemainingExceptionsNotInList" xml:space="preserve">
    <value>&lt;不在此列表中的所有 {0} &gt;</value>
  </data>
  <data name="Exceptions_EditConditions_ToolTip" xml:space="preserve">
    <value>编辑条件</value>
  </data>
  <data name="Column_Conditions" xml:space="preserve">
    <value>条件</value>
  </data>
  <data name="Column_BreakWhenThrown" xml:space="preserve">
    <value>引发异常时中断</value>
  </data>
  <data name="Column_Category" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="Exception_Conditions_And" xml:space="preserve">
    <value>与</value>
  </data>
  <data name="Exception_Conditions_ModuleNameEquals" xml:space="preserve">
    <value>模块名称等于</value>
  </data>
  <data name="Exception_Conditions_ModuleNameNotEquals" xml:space="preserve">
    <value>模块名称不等于</value>
  </data>
  <data name="Exceptions_ResetSearchSettings_ToolTip" xml:space="preserve">
    <value>重置所有搜索条件以显示所有异常</value>
  </data>
  <data name="Exceptions_AllCategories" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="EditConditionsCommand" xml:space="preserve">
    <value>编辑条件...</value>
  </data>
  <data name="ExceptionsCommand" xml:space="preserve">
    <value>异常</value>
  </data>
  <data name="FindCommand" xml:space="preserve">
    <value>查找(_F)</value>
  </data>
  <data name="Exceptions_NoMatch" xml:space="preserve">
    <value>没有能匹配搜索过滤器的异常类型。</value>
  </data>
  <data name="AddExceptionButton" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="ExceptionDescription" xml:space="preserve">
    <value>异常说明</value>
  </data>
  <data name="Exception_Error_NameCanNotBeEmpty" xml:space="preserve">
    <value>名称不能为空</value>
  </data>
  <data name="EditConditions_Title" xml:space="preserve">
    <value>编辑条件</value>
  </data>
  <data name="Button_AddCondition" xml:space="preserve">
    <value>添加条件(_A)</value>
  </data>
  <data name="ModuleBreakpointsCommand" xml:space="preserve">
    <value>模块断点(_U)</value>
  </data>
  <data name="Window_ModuleBreakpoints" xml:space="preserve">
    <value>模块断点</value>
  </data>
  <data name="Breakpoints_AddBreakpoint_ToolTip" xml:space="preserve">
    <value>添加断点</value>
  </data>
  <data name="Breakpoints_RemoveBreakpoint_ToolTip" xml:space="preserve">
    <value>移除断点</value>
  </data>
  <data name="EditAppDomainNameCommand" xml:space="preserve">
    <value>编辑程序域名称</value>
  </data>
  <data name="EditModuleNameCommand" xml:space="preserve">
    <value>编辑模块名称</value>
  </data>
  <data name="EditOrderCommand" xml:space="preserve">
    <value>编辑模块加载顺序</value>
  </data>
  <data name="EditProcessNameCommand" xml:space="preserve">
    <value>编辑进程名称</value>
  </data>
  <data name="RemoveAllBreakpointsCommand" xml:space="preserve">
    <value>移除所有断点</value>
  </data>
  <data name="RemoveBreakpointCommand" xml:space="preserve">
    <value>移除断点</value>
  </data>
  <data name="DisableBreakpointCommand3" xml:space="preserve">
    <value>禁用断点</value>
  </data>
  <data name="EnableBreakpointCommand3" xml:space="preserve">
    <value>启用断点</value>
  </data>
  <data name="DbgSettings_BreakAllProcesses" xml:space="preserve">
    <value>一个进程中断时则中断所有进程</value>
  </data>
  <data name="ShortCutKeyCtrlAltF10" xml:space="preserve">
    <value>Ctrl+Alt+F10</value>
  </data>
  <data name="ShortCutKeyCtrlAltF11" xml:space="preserve">
    <value>Ctrl+Alt+F11</value>
  </data>
  <data name="ShortCutKeyCtrlShiftAltF11" xml:space="preserve">
    <value>Ctrl+Shift+Alt+F11</value>
  </data>
  <data name="StepIntoCurrentProcessCommand" xml:space="preserve">
    <value>逐语句（当前进程）</value>
  </data>
  <data name="StepOutCurrentProcessCommand" xml:space="preserve">
    <value>跳出（当前进程）</value>
  </data>
  <data name="StepOverCurrentProcessCommand" xml:space="preserve">
    <value>逐过程（当前进程）</value>
  </data>
  <data name="Processes_BreakProcessToolTip" xml:space="preserve">
    <value>中断进程</value>
  </data>
  <data name="Processes_ContinueProcessToolTip" xml:space="preserve">
    <value>继续进程</value>
  </data>
  <data name="Processes_StepIntoProcessToolTip" xml:space="preserve">
    <value>逐语句</value>
  </data>
  <data name="Processes_StepOutProcessToolTip" xml:space="preserve">
    <value>跳出</value>
  </data>
  <data name="Processes_StepOverProcessToolTip" xml:space="preserve">
    <value>逐过程</value>
  </data>
  <data name="StepsOnlyTheCurrentProcess" xml:space="preserve">
    <value>只单步执行当前进程</value>
  </data>
  <data name="BreakProcessCommand" xml:space="preserve">
    <value>中断进程(_B)</value>
  </data>
  <data name="ContinueProcessCommand" xml:space="preserve">
    <value>继续进程(_C)</value>
  </data>
  <data name="AttachToProcess_Search_ToolTip" xml:space="preserve">
    <value>搜索进程</value>
  </data>
  <data name="AutosCommand" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="ShortCutKeyCtrlAltV_A" xml:space="preserve">
    <value>Ctrl+Alt+V, A</value>
  </data>
  <data name="Breakpoints_ExportMatchingBreakpoints_ToolTip" xml:space="preserve">
    <value>导出符合当前的搜索条件的所有断点</value>
  </data>
  <data name="Breakpoints_ImportBreakpoints_ToolTip" xml:space="preserve">
    <value>从文件导入断点</value>
  </data>
  <data name="ExportSelectedCommand" xml:space="preserve">
    <value>导出选中项(_E)...</value>
  </data>
  <data name="Breakpoints_NoMatch" xml:space="preserve">
    <value>没有断点匹配您的筛选条件。</value>
  </data>
  <data name="Breakpoints_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Breakpoints_Search_ToolTip" xml:space="preserve">
    <value>搜索断点</value>
  </data>
  <data name="Breakpoints_RemoveMatchingBreakpoints_ToolTip" xml:space="preserve">
    <value>移除与当前的搜索条件匹配的所有断点</value>
  </data>
  <data name="Breakpoints_ResetSearchSettings_ToolTip" xml:space="preserve">
    <value>重置所有搜索条件，以便显示所有断点</value>
  </data>
  <data name="Breakpoints_ToggleMatchingBreakpoints_ToolTip" xml:space="preserve">
    <value>启用或禁用与当前的搜索条件匹配的所有断点</value>
  </data>
  <data name="Modules_AllProcesses" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="Modules_NoMatch" xml:space="preserve">
    <value>没有模块匹配您的搜索条件。</value>
  </data>
  <data name="Modules_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Modules_Search_ToolTip" xml:space="preserve">
    <value>查找模块</value>
  </data>
  <data name="Modules_ResetSearchSettings_ToolTip" xml:space="preserve">
    <value>重置所有搜索条件，以便显示所有模块</value>
  </data>
  <data name="Modules_Process" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="SearchHelp_ToolTip" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="Column_Condition" xml:space="preserve">
    <value>条件</value>
  </data>
  <data name="Column_Filter" xml:space="preserve">
    <value>筛选器</value>
  </data>
  <data name="Column_HitCount" xml:space="preserve">
    <value>命中计数</value>
  </data>
  <data name="Column_WhenHit" xml:space="preserve">
    <value>当命中</value>
  </data>
  <data name="Breakpoints_GoToDisassembly_ToolTip" xml:space="preserve">
    <value>转到反汇编</value>
  </data>
  <data name="Breakpoints_GoToSourceCode_ToolTip" xml:space="preserve">
    <value>转到源代码</value>
  </data>
  <data name="GoToSourceCodeCommand" xml:space="preserve">
    <value>转到源代码</value>
  </data>
  <data name="Breakpoint_Condition_NoCondition" xml:space="preserve">
    <value>(没有条件)</value>
  </data>
  <data name="Breakpoint_Condition_WhenConditionHasChanged" xml:space="preserve">
    <value>当 '{0}' 已更改时</value>
  </data>
  <data name="Breakpoint_Condition_WhenConditionIsTrue" xml:space="preserve">
    <value>当'{0}'为true时</value>
  </data>
  <data name="Breakpoint_Filter_NoFilter" xml:space="preserve">
    <value>(无)</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsAMultipleOf" xml:space="preserve">
    <value>当命中次数是 {0} 的倍数</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsEqualTo" xml:space="preserve">
    <value>当命中的次数等于 {0}</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>当命中次数大于或等于 {0}</value>
  </data>
  <data name="Breakpoint_HitCount_NoHitCount" xml:space="preserve">
    <value>总是中断</value>
  </data>
  <data name="Breakpoint_Tracepoint_NoTraceMessage" xml:space="preserve">
    <value>中断</value>
  </data>
  <data name="Breakpoint_Tracepoint_PrintMessage" xml:space="preserve">
    <value>打印消息 '{0}'</value>
  </data>
  <data name="ShortCutKeyAltEnter" xml:space="preserve">
    <value>Alt+Enter</value>
  </data>
  <data name="SettingsCommand" xml:space="preserve">
    <value>设置(_S)</value>
  </data>
  <data name="EditBreakpointSettings_Title" xml:space="preserve">
    <value>断点设置</value>
  </data>
  <data name="Breakpoint_Condition_IsTrue" xml:space="preserve">
    <value>为 True</value>
  </data>
  <data name="Breakpoint_Condition_WhenChanged" xml:space="preserve">
    <value>当发生更改时</value>
  </data>
  <data name="Breakpoint_HitCount_IsAMultipleOf" xml:space="preserve">
    <value>是倍数于</value>
  </data>
  <data name="EditBreakpointSettings_ConditionalExpression" xml:space="preserve">
    <value>条件表达式(_E)</value>
  </data>
  <data name="EditBreakpointSettings_Filter" xml:space="preserve">
    <value>过滤器(_F)</value>
  </data>
  <data name="EditBreakpointSettings_HitCount" xml:space="preserve">
    <value>命中计数(_H)</value>
  </data>
  <data name="EditBreakpointSettings_Trace" xml:space="preserve">
    <value>日志信息(_L)</value>
  </data>
  <data name="GlyphToolTip_Actions" xml:space="preserve">
    <value>操作:</value>
  </data>
  <data name="GlyphToolTip_Conditions" xml:space="preserve">
    <value>条件:</value>
  </data>
  <data name="Breakpoint_Condition_ConditionalExpression" xml:space="preserve">
    <value>条件表达式:</value>
  </data>
  <data name="Breakpoint_Condition_WhenConditionHasChanged2" xml:space="preserve">
    <value>当 '{0}' 已更改时</value>
  </data>
  <data name="Breakpoint_Condition_WhenConditionIsTrue2" xml:space="preserve">
    <value>当'{0}'为 True 时</value>
  </data>
  <data name="Breakpoint_Filter_Filter" xml:space="preserve">
    <value>筛选器: '{0}'</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsAMultipleOf2" xml:space="preserve">
    <value>命中的次数是 {0} 的倍数</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsEqualTo2" xml:space="preserve">
    <value>命中的次数等于 {0}</value>
  </data>
  <data name="Breakpoint_HitCount_HitCountIsGreaterThanOrEqualTo2" xml:space="preserve">
    <value>命中次数大于或等于 {0}</value>
  </data>
  <data name="Breakpoint_Tracepoint_PrintMessage2" xml:space="preserve">
    <value>将消息'{0}'，打印到“输出"窗口</value>
  </data>
  <data name="Breakpoints_GlyphMargin_DisableBreakpoint" xml:space="preserve">
    <value>禁用断点</value>
  </data>
  <data name="Breakpoints_GlyphMargin_EnableBreakpoint" xml:space="preserve">
    <value>启用断点</value>
  </data>
  <data name="Breakpoints_GlyphMargin_ShowSettingsToolTip" xml:space="preserve">
    <value>设置...</value>
  </data>
  <data name="Breakpoints_GlyphMargin_BreakWhenBreakpointHit" xml:space="preserve">
    <value>中断</value>
  </data>
  <data name="EditBreakpointSettings_TraceContinue" xml:space="preserve">
    <value>继续执行</value>
  </data>
  <data name="ExportCommand" xml:space="preserve">
    <value>导出(_X)...</value>
  </data>
  <data name="SettingsCommand2" xml:space="preserve">
    <value>设置(_S)...</value>
  </data>
  <data name="StartDebuggingCommand" xml:space="preserve">
    <value>开始调试</value>
  </data>
  <data name="Breakpoint_Tracepoint_BreakPrintMessage" xml:space="preserve">
    <value>中断并打印消息 '{0}'</value>
  </data>
  <data name="BreakpointMessage_TheFunctionCanNotBeFound" xml:space="preserve">
    <value>无法找到方法： {0}</value>
  </data>
  <data name="Breakpoints_BreakpointWillNotBeHit" xml:space="preserve">
    <value>当前不会命中断点。{0}</value>
  </data>
  <data name="Breakpoints_ModuleNotLoaded" xml:space="preserve">
    <value>尚未加载模块或没有加载此模块的调试符号。</value>
  </data>
  <data name="BreakpointMessage_CouldNotCreateBreakpoint" xml:space="preserve">
    <value>无法创建断点。</value>
  </data>
  <data name="Column_Labels" xml:space="preserve">
    <value>标签</value>
  </data>
  <data name="EditLabelsCommand" xml:space="preserve">
    <value>编辑标签</value>
  </data>
  <data name="Threads_FreezeThreads_ToolTip" xml:space="preserve">
    <value>冻结线程</value>
  </data>
  <data name="Threads_NoMatch" xml:space="preserve">
    <value>没有满足搜索条件的线程</value>
  </data>
  <data name="Threads_Process" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="Threads_ResetSearchSettings_ToolTip" xml:space="preserve">
    <value>重置所有搜索条件，以便显示所有线程</value>
  </data>
  <data name="Threads_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Threads_Search_ToolTip" xml:space="preserve">
    <value>搜索线程</value>
  </data>
  <data name="Threads_ThawThreads_ToolTip" xml:space="preserve">
    <value>解冻线程</value>
  </data>
  <data name="Threads_AllProcesses" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="EditLabelsMsgBoxLabel" xml:space="preserve">
    <value>标签</value>
  </data>
  <data name="EditLabelsTitle" xml:space="preserve">
    <value>编辑标签</value>
  </data>
  <data name="Breakpoint_HitCount_CurrentHitCountValue" xml:space="preserve">
    <value>目前 {0}</value>
  </data>
  <data name="ResetBreakpointHitCountCommand" xml:space="preserve">
    <value>重置命中次数</value>
  </data>
  <data name="HelpToolTip" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="FilterExpression_AllVariables" xml:space="preserve">
    <value>可以使用的变量：</value>
  </data>
  <data name="FilterExpression_Example" xml:space="preserve">
    <value>示例： {0}</value>
  </data>
  <data name="TracepointMessage_EscapeSequences" xml:space="preserve">
    <value>转义序列： {0}</value>
  </data>
  <data name="TracepointMessage_EvaluateMessage" xml:space="preserve">
    <value>使用 {xxx} 来求值表达式 xxx</value>
  </data>
  <data name="TracepointMessage_Example" xml:space="preserve">
    <value>示例： {0}</value>
  </data>
  <data name="TracepointMessage_ValidKeywords" xml:space="preserve">
    <value>可以使用以下关键字：</value>
  </data>
  <data name="CallStackBreakpointCommand" xml:space="preserve">
    <value>断点(_B)</value>
  </data>
  <data name="InsertBreakpointCommand" xml:space="preserve">
    <value>插入断点(_R)</value>
  </data>
  <data name="InsertTracepointCommand" xml:space="preserve">
    <value>插入跟踪点(_T)</value>
  </data>
  <data name="UnwindToThisFrameCommand" xml:space="preserve">
    <value>从这个框架中解开</value>
  </data>
  <data name="GlyphMargin_CurrentStatementToolTip" xml:space="preserve">
    <value>这是将要执行的下一个语句。</value>
  </data>
  <data name="GlyphMargin_ReturnStatementToolTip" xml:space="preserve">
    <value>这是此进程从当前函数返回时要执行的下一个语句。</value>
  </data>
  <data name="DbgSettings_EnableManagedDebuggingAssistants" xml:space="preserve">
    <value>启用托管调试助手 (MDA)</value>
  </data>
  <data name="DebugStepProcessError" xml:space="preserve">
    <value>无法单步执行: {0}</value>
  </data>
  <data name="ProcessIsNotPaused" xml:space="preserve">
    <value>进程未暂停</value>
  </data>
  <data name="Window_Autos" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="DbgSettings_HighlightChangedVariables" xml:space="preserve">
    <value>在变量窗口中高亮显示更改过的变量</value>
  </data>
  <data name="MakeObjectIdCommand" xml:space="preserve">
    <value>设置对象ID(_M)</value>
  </data>
  <data name="LanguageCommand" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="DbgSettings_DebugEngine" xml:space="preserve">
    <value>调试引擎</value>
  </data>
  <data name="DbgSettings_Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="ShortCutKeyCtrlV" xml:space="preserve">
    <value>Ctrl+V</value>
  </data>
  <data name="ClearAllCommand" xml:space="preserve">
    <value>全部清除</value>
  </data>
  <data name="DeleteWatchCommand" xml:space="preserve">
    <value>删除监视(_D)</value>
  </data>
  <data name="PasteCommand" xml:space="preserve">
    <value>粘贴(_P)</value>
  </data>
  <data name="ExpressionCausesSideEffectsNoEval" xml:space="preserve">
    <value>此表达式可导致副作用，将不被计算</value>
  </data>
  <data name="RefreshExpressionButtonToolTip" xml:space="preserve">
    <value>单击按钮立即计算。</value>
  </data>
  <data name="ErrorEvaluatingExpression" xml:space="preserve">
    <value>无法计算表达式的值</value>
  </data>
  <data name="DeleteObjectIdCommand" xml:space="preserve">
    <value>删除对象 ID</value>
  </data>
  <data name="DbgSettings_ShowRawStructureOfObjects" xml:space="preserve">
    <value>在变量窗口中显示对象的原始结构</value>
  </data>
  <data name="UnknownValue" xml:space="preserve">
    <value>&lt;未知&gt;</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="DbgSettings_GroupParametersAndLocalsTogether" xml:space="preserve">
    <value>组合参数和局部变量</value>
  </data>
  <data name="DbgSettings_ShowCompilerGeneratedVariables" xml:space="preserve">
    <value>显示编译器生成的变量</value>
  </data>
  <data name="DbgSettings_ShowDecompilerGeneratedVariables" xml:space="preserve">
    <value>显示反编译器生成的变量</value>
  </data>
  <data name="DbgSettings_SortLocals" xml:space="preserve">
    <value>对局部变量排序</value>
  </data>
  <data name="DbgSettings_SortParameters" xml:space="preserve">
    <value>对参数排序</value>
  </data>
  <data name="DbgSettings_HideCompilerGeneratedMembers" xml:space="preserve">
    <value>隐藏编译器生成的成员</value>
  </data>
  <data name="FunctionEvaluationDisabled" xml:space="preserve">
    <value>隐式函数求值被用户关闭</value>
  </data>
  <data name="DbgSettings_RespectHideMemberAttributes" xml:space="preserve">
    <value>遵守隐藏成员的特性</value>
  </data>
  <data name="InternalDebuggerError" xml:space="preserve">
    <value>内部调试器错误</value>
  </data>
  <data name="FuncEvalRequiresAllThreadsToRun" xml:space="preserve">
    <value>函数求值需要所有线程都在运行。</value>
  </data>
  <data name="DigitSeparatorsCommand" xml:space="preserve">
    <value>数字分隔符</value>
  </data>
  <data name="Column_ProcessCommandLine" xml:space="preserve">
    <value>命令行</value>
  </data>
  <data name="CannotReadLocalOrArgumentMaybeOptimizedAway" xml:space="preserve">
    <value>无法获取局部变量或参数的值，因为它在此时不可用，可能是被优化了。</value>
  </data>
  <data name="ExceptionMessage" xml:space="preserve">
    <value>信息: {0}</value>
  </data>
  <data name="ExceptionName" xml:space="preserve">
    <value>异常: {0}</value>
  </data>
  <data name="UnhandledExceptionMessage_ProcessName_ProcessId" xml:space="preserve">
    <value>{0} ({1}) 中出现未处理的异常</value>
  </data>
  <data name="StatusBar_BreakpointHit" xml:space="preserve">
    <value>断点</value>
  </data>
  <data name="BreakpointExpressionMustBeABooleanExpression" xml:space="preserve">
    <value>断点表达式必须是布尔表达式</value>
  </data>
  <data name="DbgSettings_SuppressJITOptimization" xml:space="preserve">
    <value>在模块加载时禁用JIT优化</value>
  </data>
  <data name="DbgSettings_SuppressJITOptimization_ProgramModules" xml:space="preserve">
    <value>程序模块</value>
  </data>
  <data name="DbgSettings_SuppressJITOptimization_SystemModules" xml:space="preserve">
    <value>系统模块</value>
  </data>
  <data name="RuntimeIsUnableToEvaluateExpression" xml:space="preserve">
    <value>运行时无法计算此表达式。</value>
  </data>
  <data name="Exceptions_ToggleMatchingExceptions_ToolTip" xml:space="preserve">
    <value>启用或禁用与当前搜索条件匹配的所有异常</value>
  </data>
  <data name="DisableBreakpointCommand2" xml:space="preserve">
    <value>禁用断点(_D)</value>
  </data>
  <data name="Exceptions_Add_ToolTip" xml:space="preserve">
    <value>添加异常到列表</value>
  </data>
  <data name="AskAppWindowClosingStopDebugging" xml:space="preserve">
    <value>要停止调试吗？</value>
  </data>
  <data name="DbgSettings_FocusActiveProcess" xml:space="preserve">
    <value>使被调试进程获得焦点</value>
  </data>
  <data name="LoadAllModulesCommand" xml:space="preserve">
    <value>打开所有模块</value>
  </data>
  <data name="DbgSettings_HideDeprecatedError" xml:space="preserve">
    <value>在变量窗口中隐藏已弃用的成员</value>
  </data>
  <data name="DbgSettings_ShowReturnValues" xml:space="preserve">
    <value>显示返回值</value>
  </data>
  <data name="DbgSettings_RedirectGuiConsoleOutput" xml:space="preserve">
    <value>将 GUI 应用程序的控制台输出重定向到 "输出" 窗口</value>
  </data>
  <data name="AttachToProcess_MakingAnImageEasierToDebug" xml:space="preserve">
    <value>使映像更易于调试</value>
  </data>
  <data name="ShowOnlyPublicMembersCommand" xml:space="preserve">
    <value>公共成员</value>
  </data>
  <data name="DbgSettings_ShowRawLocals" xml:space="preserve">
    <value>显示原始区域变量</value>
  </data>
  <data name="DbgSettings_AsyncDebugging" xml:space="preserve">
    <value>启用异步调试</value>
  </data>
  <data name="DbgSettings_StepOverPropertiesAndOperators" xml:space="preserve">
    <value>逐过程执行属性和运算符</value>
  </data>
  <data name="CopyExpressionCommand" xml:space="preserve">
    <value>复制表达式(_X)</value>
  </data>
  <data name="Error_CouldNotShowDisassembly" xml:space="preserve">
    <value>找不到方法的代码。请确保进程已暂停，并且该方法已实时编译（JIT）。</value>
  </data>
  <data name="DisassemblyCommand" xml:space="preserve">
    <value>反汇编(_D)</value>
  </data>
  <data name="ShortCutKeyAlt8" xml:space="preserve">
    <value>Alt+8</value>
  </data>
  <data name="DbgSettings_IgnoreUnhandledExceptions" xml:space="preserve">
    <value>忽略未处理的异常</value>
  </data>
  <data name="RunWithInvalidExtension" xml:space="preserve">
    <value>确定要运行此无有效扩展名的文件吗？</value>
  </data>
  <data name="DebugWithInvalidExtension" xml:space="preserve">
    <value>确定要调试此无有效扩展名的文件吗？</value>
  </data>
  <data name="Processes_NoMatch" xml:space="preserve">
    <value>没有进程匹配您的搜索过滤器。</value>
  </data>
  <data name="Processes_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Processes_ResetSearchSettings_ToolTip" xml:space="preserve">
    <value>重置所有搜索条件以便显示全部进程</value>
  </data>
  <data name="Processes_Search_ToolTip" xml:space="preserve">
    <value>搜索进程</value>
  </data>
  <data name="DbgSettings_FocusDebuggerWhenProcessBreaks" xml:space="preserve">
    <value>当调试器中断时，将dnSpy带到最前</value>
  </data>
  <data name="Column_LoadModule" xml:space="preserve">
    <value>加载</value>
  </data>
</root>