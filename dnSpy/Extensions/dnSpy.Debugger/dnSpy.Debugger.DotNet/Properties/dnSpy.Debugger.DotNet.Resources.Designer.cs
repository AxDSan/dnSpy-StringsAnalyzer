//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnSpy.Debugger.DotNet.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class dnSpy_Debugger_DotNet_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal dnSpy_Debugger_DotNet_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dnSpy.Debugger.DotNet.Properties.dnSpy.Debugger.DotNet.Resources", typeof(dnSpy_Debugger_DotNet_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Class Breakpoint.
        /// </summary>
        public static string AddClassBreakpointCommand {
            get {
                return ResourceManager.GetString("AddClassBreakpointCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Class Tracepoint.
        /// </summary>
        public static string AddClassTracepointCommand {
            get {
                return ResourceManager.GetString("AddClassTracepointCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Method Breakpoint.
        /// </summary>
        public static string AddMethodBreakpointCommand {
            get {
                return ResourceManager.GetString("AddMethodBreakpointCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break When Thrown.
        /// </summary>
        public static string BreakWhenExceptionThrownCommand {
            get {
                return ResourceManager.GetString("BreakWhenExceptionThrownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Cancel.
        /// </summary>
        public static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel loading modules?.
        /// </summary>
        public static string CancelLoadingModulesMessage {
            get {
                return ResourceManager.GetString("CancelLoadingModulesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t evaluate expressions when current stack frame is a native stack frame.
        /// </summary>
        public static string CantEvaluateWhenCurrentFrameIsNative {
            get {
                return ResourceManager.GetString("CantEvaluateWhenCurrentFrameIsNative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiler generated variables can&apos;t be evaluated.
        /// </summary>
        public static string DecompilerGeneratedVariablesCanNotBeEvaluated {
            get {
                return ResourceManager.GetString("DecompilerGeneratedVariablesCanNotBeEvaluated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IL offset {0}.
        /// </summary>
        public static string GlyphToolTip_IL_offset_0 {
            get {
                return ResourceManager.GetString("GlyphToolTip_IL_offset_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to line {0} character {1}.
        /// </summary>
        public static string GlyphToolTip_line_0_character_1 {
            get {
                return ResourceManager.GetString("GlyphToolTip_line_0_character_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal debugger error.
        /// </summary>
        public static string InternalDebuggerError {
            get {
                return ResourceManager.GetString("InternalDebuggerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading the module. This could take a while if it&apos;s a big module..
        /// </summary>
        public static string LoadModule_InfoText {
            get {
                return ResourceManager.GetString("LoadModule_InfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Dynamic Modules.
        /// </summary>
        public static string LoadModule_Title {
            get {
                return ResourceManager.GetString("LoadModule_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; threw an exception of type &apos;{1}&apos;.
        /// </summary>
        public static string Method_X_ThrewAnExceptionOfType_Y {
            get {
                return ResourceManager.GetString("Method_X_ThrewAnExceptionOfType_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must break the process before dynamic modules can be loaded..
        /// </summary>
        public static string Module_BreakProcessBeforeLoadingDynamicModules {
            get {
                return ResourceManager.GetString("Module_BreakProcessBeforeLoadingDynamicModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata of the module couldn&apos;t be found or it is invalid.
        /// </summary>
        public static string ModuleMetadataNotFoundOrInvalid {
            get {
                return ResourceManager.GetString("ModuleMetadataNotFoundOrInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No object found at the given address.
        /// </summary>
        public static string NoDotNetObjectFoundAtAddress {
            get {
                return ResourceManager.GetString("NoDotNetObjectFoundAtAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no exception on the current thread.
        /// </summary>
        public static string NoExceptionOnTheCurrentThread {
            get {
                return ResourceManager.GetString("NoExceptionOnTheCurrentThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reload All Method Bodies.
        /// </summary>
        public static string ReloadAllMethodBodiesCommand {
            get {
                return ResourceManager.GetString("ReloadAllMethodBodiesCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return value is not currently available.
        /// </summary>
        public static string ReturnValueNotAvailable {
            get {
                return ResourceManager.GetString("ReturnValueNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step into: Stepping over operator &apos;{0}&apos;..
        /// </summary>
        public static string StepFilter_SteppingOverOperator {
            get {
                return ResourceManager.GetString("StepFilter_SteppingOverOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step into: Stepping over property &apos;{0}&apos;..
        /// </summary>
        public static string StepFilter_SteppingOverProperty {
            get {
                return ResourceManager.GetString("StepFilter_SteppingOverProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown variable or object ID.
        /// </summary>
        public static string UnknownVariableOrObjectId {
            get {
                return ResourceManager.GetString("UnknownVariableOrObjectId", resourceCulture);
            }
        }
    }
}
