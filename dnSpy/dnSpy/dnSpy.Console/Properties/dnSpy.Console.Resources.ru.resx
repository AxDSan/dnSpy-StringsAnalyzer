<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error1" xml:space="preserve">
    <value>ОШИБКА: {0}</value>
  </data>
  <data name="FileOrDirDoesNotExist" xml:space="preserve">
    <value>Файл/каталог '{0}' не существует</value>
  </data>
  <data name="InvalidOption" xml:space="preserve">
    <value>Неверная опция: {0}</value>
  </data>
  <data name="InvalidSolutionName" xml:space="preserve">
    <value>Имя решения ({0}) должно быть указано относительно каталога проекта</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Неверный токен метаданных</value>
  </data>
  <data name="InvalidVSVersion" xml:space="preserve">
    <value>Неверная версия Visual Studio: {0}</value>
  </data>
  <data name="LanguageDoesNotExist" xml:space="preserve">
    <value>Язык '{0}' не существует</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Языки:</value>
  </data>
  <data name="LanguageXDoesNotExist" xml:space="preserve">
    <value>Язык {0} не существует</value>
  </data>
  <data name="MissingAsmSearchPath" xml:space="preserve">
    <value>Отсутствует путь поиска сборки</value>
  </data>
  <data name="MissingDotNetFilename" xml:space="preserve">
    <value>Отсутствует имя файла .NET</value>
  </data>
  <data name="MissingLanguageName" xml:space="preserve">
    <value>Отсутствует имя языка</value>
  </data>
  <data name="MissingMDToken" xml:space="preserve">
    <value>Отсутствует токен метаданных</value>
  </data>
  <data name="MissingNumberOfThreads" xml:space="preserve">
    <value>Отсутствует количество потоков</value>
  </data>
  <data name="MissingOptions" xml:space="preserve">
    <value>Не указана ни одна опция</value>
  </data>
  <data name="MissingOutputDir" xml:space="preserve">
    <value>Отсутствует выходной каталог</value>
  </data>
  <data name="MissingSolutionName" xml:space="preserve">
    <value>Отсутствует имя файла решения</value>
  </data>
  <data name="MissingVSVersion" xml:space="preserve">
    <value>Отсутствует версия Visual Studio</value>
  </data>
  <data name="NoLanguagesFound" xml:space="preserve">
    <value>Языки не найдены. Убедитесь, что файлы dll с языками расположены в каталоге с программой.</value>
  </data>
  <data name="NotDotNetFile" xml:space="preserve">
    <value>{0} не файла .NET</value>
  </data>
  <data name="OnlyOneFileCanBeDecompiled" xml:space="preserve">
    <value>С --md может быть декомпилирован только один файл</value>
  </data>
  <data name="MissingUserGacPath" xml:space="preserve">
    <value>Отсутствует путь к пользовательскому GAC</value>
  </data>
  <data name="InvalidMemberToDecompile" xml:space="preserve">
    <value>Декомпилированы могут быть только типы, методы, поля, события и свойства</value>
  </data>
  <data name="CouldNotFindTypeX" xml:space="preserve">
    <value>Тип {0} не найден</value>
  </data>
  <data name="CouldNotResolveGacFileX" xml:space="preserve">
    <value>Не могу найти сборку GAC '{0}'</value>
  </data>
  <data name="MissingGacFile" xml:space="preserve">
    <value>Отсутствует имя сборки GAC</value>
  </data>
  <data name="MissingTypeName" xml:space="preserve">
    <value>Отсутствует полное имя типа</value>
  </data>
  <data name="LanguageXDoesNotSupportProjects" xml:space="preserve">
    <value>Язык {0} не поддерживает создание файлов проекта</value>
  </data>
  <data name="LanguageOptions" xml:space="preserve">
    <value>Языковые настройки:</value>
  </data>
  <data name="LanguageOptionsDesc" xml:space="preserve">
    <value>Все опции могут быть выключены, используя префиксы 'no-' или 'dont-', например --dont-sort-members</value>
  </data>
  <data name="MissingOptionArgument" xml:space="preserve">
    <value>Отсутствует аргумент опции</value>
  </data>
  <data name="InvalidGuid" xml:space="preserve">
    <value>Недопустимый GUID</value>
  </data>
  <data name="CmdLineAssembly" xml:space="preserve">
    <value>сборка</value>
  </data>
  <data name="CmdLineDescription_AsmPath" xml:space="preserve">
    <value>путь поиска сборок. Пути могут быть разделены '{0}' или вы можете использовать несколько --asm-path</value>
  </data>
  <data name="CmdLineDescription_GACFile" xml:space="preserve">
    <value>декомпилировать сборку из GAC. Используйте полное имя сборки, чтобы использовать точную версию.</value>
  </data>
  <data name="CmdLineDescription_Language" xml:space="preserve">
    <value>изменить язык, по умолчанию C#. Можно использовать GUID.</value>
  </data>
  <data name="CmdLineDescription_MDToken" xml:space="preserve">
    <value>декомпилировать член с токеном N метаданных в stdout</value>
  </data>
  <data name="CmdLineDescription_NoBAML" xml:space="preserve">
    <value>не декомпилировать baml в xaml</value>
  </data>
  <data name="CmdLineDescription_NoGAC" xml:space="preserve">
    <value>не использовать GAC для поиска сборок. Полезно с --no-stdlib</value>
  </data>
  <data name="CmdLineDescription_NoResources" xml:space="preserve">
    <value>не распаковывать ресурсы</value>
  </data>
  <data name="CmdLineDescription_NoResX" xml:space="preserve">
    <value>не создавать файлы .resx</value>
  </data>
  <data name="CmdLineDescription_NoSLN" xml:space="preserve">
    <value>не создавать файл .sln</value>
  </data>
  <data name="CmdLineDescription_NoStdLib" xml:space="preserve">
    <value>проекты не ссылаются на mscorlib</value>
  </data>
  <data name="CmdLineDescription_NumberOfThreads" xml:space="preserve">
    <value>число рабочих потоков. По умолчанию - использовать один поток на каждое ядро процессора</value>
  </data>
  <data name="CmdLineDescription_OutputDirectory" xml:space="preserve">
    <value>выходной каталог</value>
  </data>
  <data name="CmdLineDescription_ProjectGUID" xml:space="preserve">
    <value>GUID проекта</value>
  </data>
  <data name="CmdLineDescription_RecursiveSearch" xml:space="preserve">
    <value>рекурсивный поиск файлов .NET для декомпиляции</value>
  </data>
  <data name="CmdLineDescription_SlnName" xml:space="preserve">
    <value>имя файла .sln</value>
  </data>
  <data name="CmdLineDescription_Type1" xml:space="preserve">
    <value>декомпилировать тип с указанным именем в stdout. Или Namespace.Name или Name, без учета регистра</value>
  </data>
  <data name="CmdLineDescription_Type2" xml:space="preserve">
    <value>то же, что и -t</value>
  </data>
  <data name="CmdLineDescription_UserGAC" xml:space="preserve">
    <value>пользовательский путь GAC. Пути могут быть разделены '{0}' или вы можете использовать несколько --user-gac</value>
  </data>
  <data name="CmdLineDescription_VSVersion" xml:space="preserve">
    <value>Версия Visual Studio, 2005, 2008, ..., {0}</value>
  </data>
  <data name="CmdLineLanguage" xml:space="preserve">
    <value>язык</value>
  </data>
  <data name="CmdLineName" xml:space="preserve">
    <value>имя</value>
  </data>
  <data name="CmdLineOutputDir" xml:space="preserve">
    <value>выходной каталог</value>
  </data>
  <data name="CmdLinePath" xml:space="preserve">
    <value>путь</value>
  </data>
  <data name="ExampleDescription1" xml:space="preserve">
    <value>Декомпилирует все файлы .NET в каталоге выше и сохраняет файлы в C:\out\path</value>
  </data>
  <data name="ExampleDescription2" xml:space="preserve">
    <value>Декомпилирует все файлы .NET в каталоге выше и во всех подкаталогах</value>
  </data>
  <data name="ExampleDescription3" xml:space="preserve">
    <value>Декомпилирует все файлы .NET *.dll в каталоге выше и сохраняет файлы в C:\out\path</value>
  </data>
  <data name="ExampleDescription4" xml:space="preserve">
    <value>Декомпилирует член с токеном 0x06000123</value>
  </data>
  <data name="ExampleDescription5" xml:space="preserve">
    <value>Декомпилирует System.Int32 из mscorlib</value>
  </data>
  <data name="ExamplesHeader" xml:space="preserve">
    <value>Примеры:</value>
  </data>
  <data name="UsageHeader" xml:space="preserve">
    <value>[options] [fileOrDir1] [fileOrDir2] [...]</value>
  </data>
  <data name="CmdLineDescription_NoColor" xml:space="preserve">
    <value>не использовать цветной текст</value>
  </data>
  <data name="CmdLineDescription_Spaces" xml:space="preserve">
    <value>Размер табуляции в пробелах или 0 для использования одной табуляции</value>
  </data>
  <data name="InvalidSpacesArgument" xml:space="preserve">
    <value>Количество пробелов должно быть между {0} и {1}</value>
  </data>
  <data name="MissingArgument" xml:space="preserve">
    <value>Отсутствует аргумент</value>
  </data>
</root>
