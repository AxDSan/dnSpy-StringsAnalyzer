//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnSpy.Console.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class dnSpy_Console_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal dnSpy_Console_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dnSpy.Console.Properties.dnSpy.Console.Resources", typeof(dnSpy_Console_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to assembly.
        /// </summary>
        internal static string CmdLineAssembly {
            get {
                return ResourceManager.GetString("CmdLineAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to assembly search path. Paths can be separated with &apos;{0}&apos; or you can use multiple --asm-path&apos;s.
        /// </summary>
        internal static string CmdLineDescription_AsmPath {
            get {
                return ResourceManager.GetString("CmdLineDescription_AsmPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decompile an assembly from the GAC. Use full assembly name to use an exact version..
        /// </summary>
        internal static string CmdLineDescription_GACFile {
            get {
                return ResourceManager.GetString("CmdLineDescription_GACFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set language, default is C#. Guids can be used..
        /// </summary>
        internal static string CmdLineDescription_Language {
            get {
                return ResourceManager.GetString("CmdLineDescription_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decompile the member with metadata token N to stdout.
        /// </summary>
        internal static string CmdLineDescription_MDToken {
            get {
                return ResourceManager.GetString("CmdLineDescription_MDToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t decompile baml to xaml.
        /// </summary>
        internal static string CmdLineDescription_NoBAML {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoBAML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t colorize the text.
        /// </summary>
        internal static string CmdLineDescription_NoColor {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t use the GAC to look up assemblies. Useful with --no-stdlib.
        /// </summary>
        internal static string CmdLineDescription_NoGAC {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoGAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t unpack resources.
        /// </summary>
        internal static string CmdLineDescription_NoResources {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t create .resx files.
        /// </summary>
        internal static string CmdLineDescription_NoResX {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoResX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to don&apos;t create a .sln file.
        /// </summary>
        internal static string CmdLineDescription_NoSLN {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoSLN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to projects don&apos;t reference mscorlib.
        /// </summary>
        internal static string CmdLineDescription_NoStdLib {
            get {
                return ResourceManager.GetString("CmdLineDescription_NoStdLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to number of worker threads. Default is to use one thread per CPU core.
        /// </summary>
        internal static string CmdLineDescription_NumberOfThreads {
            get {
                return ResourceManager.GetString("CmdLineDescription_NumberOfThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to output directory.
        /// </summary>
        internal static string CmdLineDescription_OutputDirectory {
            get {
                return ResourceManager.GetString("CmdLineDescription_OutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to project guid.
        /// </summary>
        internal static string CmdLineDescription_ProjectGUID {
            get {
                return ResourceManager.GetString("CmdLineDescription_ProjectGUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to recursive search for .NET files to decompile.
        /// </summary>
        internal static string CmdLineDescription_RecursiveSearch {
            get {
                return ResourceManager.GetString("CmdLineDescription_RecursiveSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name of the .sln file.
        /// </summary>
        internal static string CmdLineDescription_SlnName {
            get {
                return ResourceManager.GetString("CmdLineDescription_SlnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of a tab in spaces or 0 to use one tab.
        /// </summary>
        internal static string CmdLineDescription_Spaces {
            get {
                return ResourceManager.GetString("CmdLineDescription_Spaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decompile the type with the specified name to stdout. Either Namespace.Name or Name, case insensitive.
        /// </summary>
        internal static string CmdLineDescription_Type1 {
            get {
                return ResourceManager.GetString("CmdLineDescription_Type1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to same as -t.
        /// </summary>
        internal static string CmdLineDescription_Type2 {
            get {
                return ResourceManager.GetString("CmdLineDescription_Type2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to user GAC path. Paths can be separated with &apos;{0}&apos; or you can use multiple --user-gac&apos;s.
        /// </summary>
        internal static string CmdLineDescription_UserGAC {
            get {
                return ResourceManager.GetString("CmdLineDescription_UserGAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual Studio version, 2005, 2008, ..., {0}.
        /// </summary>
        internal static string CmdLineDescription_VSVersion {
            get {
                return ResourceManager.GetString("CmdLineDescription_VSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to lang.
        /// </summary>
        internal static string CmdLineLanguage {
            get {
                return ResourceManager.GetString("CmdLineLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string CmdLineName {
            get {
                return ResourceManager.GetString("CmdLineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to outdir.
        /// </summary>
        internal static string CmdLineOutputDir {
            get {
                return ResourceManager.GetString("CmdLineOutputDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to path.
        /// </summary>
        internal static string CmdLinePath {
            get {
                return ResourceManager.GetString("CmdLinePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} couldn&apos;t be found.
        /// </summary>
        internal static string CouldNotFindTypeX {
            get {
                return ResourceManager.GetString("CouldNotFindTypeX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t resolve GAC assembly &apos;{0}&apos;.
        /// </summary>
        internal static string CouldNotResolveGacFileX {
            get {
                return ResourceManager.GetString("CouldNotResolveGacFileX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: {0}.
        /// </summary>
        internal static string Error1 {
            get {
                return ResourceManager.GetString("Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiles all .NET files in the above directory and saves files to C:\out\path.
        /// </summary>
        internal static string ExampleDescription1 {
            get {
                return ResourceManager.GetString("ExampleDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiles all .NET files in the above directory and all sub directories.
        /// </summary>
        internal static string ExampleDescription2 {
            get {
                return ResourceManager.GetString("ExampleDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiles all *.dll .NET files in the above directory and saves files to C:\out\path.
        /// </summary>
        internal static string ExampleDescription3 {
            get {
                return ResourceManager.GetString("ExampleDescription3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiles the member with token 0x06000123.
        /// </summary>
        internal static string ExampleDescription4 {
            get {
                return ResourceManager.GetString("ExampleDescription4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiles System.Int32 from mscorlib.
        /// </summary>
        internal static string ExampleDescription5 {
            get {
                return ResourceManager.GetString("ExampleDescription5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples:.
        /// </summary>
        internal static string ExamplesHeader {
            get {
                return ResourceManager.GetString("ExamplesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File/directory &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        internal static string FileOrDirDoesNotExist {
            get {
                return ResourceManager.GetString("FileOrDirDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid GUID.
        /// </summary>
        internal static string InvalidGuid {
            get {
                return ResourceManager.GetString("InvalidGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only types, methods, fields, events and properties can be decompiled.
        /// </summary>
        internal static string InvalidMemberToDecompile {
            get {
                return ResourceManager.GetString("InvalidMemberToDecompile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option: {0}.
        /// </summary>
        internal static string InvalidOption {
            get {
                return ResourceManager.GetString("InvalidOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .sln name ({0}) must be relative to project directory.
        /// </summary>
        internal static string InvalidSolutionName {
            get {
                return ResourceManager.GetString("InvalidSolutionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of spaces must be between {0} and {1}.
        /// </summary>
        internal static string InvalidSpacesArgument {
            get {
                return ResourceManager.GetString("InvalidSpacesArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid metadata token.
        /// </summary>
        internal static string InvalidToken {
            get {
                return ResourceManager.GetString("InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Visual Studio version: {0}.
        /// </summary>
        internal static string InvalidVSVersion {
            get {
                return ResourceManager.GetString("InvalidVSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        internal static string LanguageDoesNotExist {
            get {
                return ResourceManager.GetString("LanguageDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language options:.
        /// </summary>
        internal static string LanguageOptions {
            get {
                return ResourceManager.GetString("LanguageOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All boolean options can be disabled by using &apos;no-&apos; or &apos;dont-&apos;, eg. --dont-sort-members.
        /// </summary>
        internal static string LanguageOptionsDesc {
            get {
                return ResourceManager.GetString("LanguageOptionsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Languages:.
        /// </summary>
        internal static string Languages {
            get {
                return ResourceManager.GetString("Languages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language {0} does not exist.
        /// </summary>
        internal static string LanguageXDoesNotExist {
            get {
                return ResourceManager.GetString("LanguageXDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language {0} doesn&apos;t support creating project files.
        /// </summary>
        internal static string LanguageXDoesNotSupportProjects {
            get {
                return ResourceManager.GetString("LanguageXDoesNotSupportProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing argument.
        /// </summary>
        internal static string MissingArgument {
            get {
                return ResourceManager.GetString("MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing assembly search path.
        /// </summary>
        internal static string MissingAsmSearchPath {
            get {
                return ResourceManager.GetString("MissingAsmSearchPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing .NET filename.
        /// </summary>
        internal static string MissingDotNetFilename {
            get {
                return ResourceManager.GetString("MissingDotNetFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing GAC assembly name.
        /// </summary>
        internal static string MissingGacFile {
            get {
                return ResourceManager.GetString("MissingGacFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing language name.
        /// </summary>
        internal static string MissingLanguageName {
            get {
                return ResourceManager.GetString("MissingLanguageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing metadata token.
        /// </summary>
        internal static string MissingMDToken {
            get {
                return ResourceManager.GetString("MissingMDToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing number of threads.
        /// </summary>
        internal static string MissingNumberOfThreads {
            get {
                return ResourceManager.GetString("MissingNumberOfThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing option argument.
        /// </summary>
        internal static string MissingOptionArgument {
            get {
                return ResourceManager.GetString("MissingOptionArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No options specified.
        /// </summary>
        internal static string MissingOptions {
            get {
                return ResourceManager.GetString("MissingOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing output directory.
        /// </summary>
        internal static string MissingOutputDir {
            get {
                return ResourceManager.GetString("MissingOutputDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing .sln name.
        /// </summary>
        internal static string MissingSolutionName {
            get {
                return ResourceManager.GetString("MissingSolutionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing full name of type.
        /// </summary>
        internal static string MissingTypeName {
            get {
                return ResourceManager.GetString("MissingTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing user GAC path.
        /// </summary>
        internal static string MissingUserGacPath {
            get {
                return ResourceManager.GetString("MissingUserGacPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Visual Studio version.
        /// </summary>
        internal static string MissingVSVersion {
            get {
                return ResourceManager.GetString("MissingVSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No languages were found. Make sure that the language dll files exist in the same folder as this program..
        /// </summary>
        internal static string NoLanguagesFound {
            get {
                return ResourceManager.GetString("NoLanguagesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a .NET file.
        /// </summary>
        internal static string NotDotNetFile {
            get {
                return ResourceManager.GetString("NotDotNetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one file can be decompiled when using --md.
        /// </summary>
        internal static string OnlyOneFileCanBeDecompiled {
            get {
                return ResourceManager.GetString("OnlyOneFileCanBeDecompiled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [options] [fileOrDir1] [fileOrDir2] [...].
        /// </summary>
        internal static string UsageHeader {
            get {
                return ResourceManager.GetString("UsageHeader", resourceCulture);
            }
        }
    }
}
