<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error1" xml:space="preserve">
    <value>ПОМИЛКА: {0}</value>
  </data>
  <data name="FileOrDirDoesNotExist" xml:space="preserve">
    <value>Файл/директорія '{0}' не існує</value>
  </data>
  <data name="InvalidOption" xml:space="preserve">
    <value>Невірний параметр: {0}</value>
  </data>
  <data name="InvalidSolutionName" xml:space="preserve">
    <value>Ім'я .sln ({0}) має бути відносно каталогу проекту</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Невірний токен метаданих</value>
  </data>
  <data name="InvalidVSVersion" xml:space="preserve">
    <value>Невірна версія Visual Studio: {0}</value>
  </data>
  <data name="LanguageDoesNotExist" xml:space="preserve">
    <value>Мова '{0}' не існує</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Мови:</value>
  </data>
  <data name="LanguageXDoesNotExist" xml:space="preserve">
    <value>Мова '{0}' не існує</value>
  </data>
  <data name="MissingAsmSearchPath" xml:space="preserve">
    <value>Відсутній шлях пошуку збірки</value>
  </data>
  <data name="MissingDotNetFilename" xml:space="preserve">
    <value>Відсутнє ім'я файлу .NET</value>
  </data>
  <data name="MissingLanguageName" xml:space="preserve">
    <value>Відсутня назва мови</value>
  </data>
  <data name="MissingMDToken" xml:space="preserve">
    <value>Відсутній токен метаданих</value>
  </data>
  <data name="MissingNumberOfThreads" xml:space="preserve">
    <value>Відсутня кількість потоків</value>
  </data>
  <data name="MissingOptions" xml:space="preserve">
    <value>Параметри не вказані</value>
  </data>
  <data name="MissingOutputDir" xml:space="preserve">
    <value>Відсутні вихідний каталог</value>
  </data>
  <data name="MissingSolutionName" xml:space="preserve">
    <value>Відсутнє ім'я .sln</value>
  </data>
  <data name="MissingVSVersion" xml:space="preserve">
    <value>Відсутня версія Visual Studio</value>
  </data>
  <data name="NoLanguagesFound" xml:space="preserve">
    <value>Не знайдено жодної мови. Переконайтеся, що мовні dll-файли існують в тій самій папці цієї програми.</value>
  </data>
  <data name="NotDotNetFile" xml:space="preserve">
    <value>{0} не є файлом .NET</value>
  </data>
  <data name="OnlyOneFileCanBeDecompiled" xml:space="preserve">
    <value>Тільки один файл можна декомпілювати при використанні ключа --md</value>
  </data>
  <data name="MissingUserGacPath" xml:space="preserve">
    <value>Відсутній шлях до користувацького GAC </value>
  </data>
  <data name="InvalidMemberToDecompile" xml:space="preserve">
    <value>Можна декомпілювати лише типи, методи, поля, події та властивості</value>
  </data>
  <data name="CouldNotFindTypeX" xml:space="preserve">
    <value>Не вдалося знайти тип {0}</value>
  </data>
  <data name="CouldNotResolveGacFileX" xml:space="preserve">
    <value>Не зміг знайти збірку GAC '{0}'</value>
  </data>
  <data name="MissingGacFile" xml:space="preserve">
    <value>Відсутнє ім'я збірки GAC</value>
  </data>
  <data name="MissingTypeName" xml:space="preserve">
    <value>Відсутнє повне імя типу</value>
  </data>
  <data name="LanguageXDoesNotSupportProjects" xml:space="preserve">
    <value>Мова {0} не підтримує створення файлів проектів</value>
  </data>
  <data name="LanguageOptions" xml:space="preserve">
    <value>Мовні налаштування:</value>
  </data>
  <data name="LanguageOptionsDesc" xml:space="preserve">
    <value>Усі булеві опції можуть бути виключені, використовуючи префікси 'no-' чи 'dont-', наприклад --dont-sort-members</value>
  </data>
  <data name="MissingOptionArgument" xml:space="preserve">
    <value>Пропущений аргумент опції</value>
  </data>
  <data name="InvalidGuid" xml:space="preserve">
    <value>Неприпустимий GUID</value>
  </data>
  <data name="CmdLineAssembly" xml:space="preserve">
    <value>збірка</value>
  </data>
  <data name="CmdLineDescription_AsmPath" xml:space="preserve">
    <value>шляк пошуку збірки. Шляхи можут бути розділені '{0}' або ж використайте декілька --asm-path</value>
  </data>
  <data name="CmdLineDescription_GACFile" xml:space="preserve">
    <value>декомпілювати збірку із GAC. Використовуйте повне імя збірки, щоб використати точну версію.</value>
  </data>
  <data name="CmdLineDescription_Language" xml:space="preserve">
    <value>вибрати мову, за замовчанням це C#. Можна використовувати ідентифікатори GUID.</value>
  </data>
  <data name="CmdLineDescription_MDToken" xml:space="preserve">
    <value>декомпілювати член із токеном N метаданних в stdout</value>
  </data>
  <data name="CmdLineDescription_NoBAML" xml:space="preserve">
    <value>не декомпілювати baml у xaml</value>
  </data>
  <data name="CmdLineDescription_NoGAC" xml:space="preserve">
    <value>не використовувати GAC для пошуку збірок. Корисно із --no-stdlib</value>
  </data>
  <data name="CmdLineDescription_NoResources" xml:space="preserve">
    <value>не розпаковувати ресурси</value>
  </data>
  <data name="CmdLineDescription_NoResX" xml:space="preserve">
    <value>не створювати .resx файли</value>
  </data>
  <data name="CmdLineDescription_NoSLN" xml:space="preserve">
    <value>не створювати .sln файл</value>
  </data>
  <data name="CmdLineDescription_NoStdLib" xml:space="preserve">
    <value>проекти не посилаються на mscorlib</value>
  </data>
  <data name="CmdLineDescription_NumberOfThreads" xml:space="preserve">
    <value>кількість робочих потоків. За замовчуванням використовувати один потік на ядро</value>
  </data>
  <data name="CmdLineDescription_OutputDirectory" xml:space="preserve">
    <value>вихідний каталог</value>
  </data>
  <data name="CmdLineDescription_ProjectGUID" xml:space="preserve">
    <value>guid проекту</value>
  </data>
  <data name="CmdLineDescription_RecursiveSearch" xml:space="preserve">
    <value>рекурсивний пошук файлів .NET для декомпіляції</value>
  </data>
  <data name="CmdLineDescription_SlnName" xml:space="preserve">
    <value>ім'я файлу .sln</value>
  </data>
  <data name="CmdLineDescription_Type1" xml:space="preserve">
    <value>декомпілювати тип із вказаним іменем в stdout.  Або ж Namespace.Name чи Name, без врахування регістру</value>
  </data>
  <data name="CmdLineDescription_Type2" xml:space="preserve">
    <value>те ж саме що і -t</value>
  </data>
  <data name="CmdLineDescription_UserGAC" xml:space="preserve">
    <value>користувацький шлях GAC. Шляхи можуть бути розділені '{0}' або ж використовуйте декілька --user-gac</value>
  </data>
  <data name="CmdLineDescription_VSVersion" xml:space="preserve">
    <value>Visual Studio версій, 2005, 2008, ..., {0}</value>
  </data>
  <data name="CmdLineLanguage" xml:space="preserve">
    <value>мова</value>
  </data>
  <data name="CmdLineName" xml:space="preserve">
    <value>ім’я</value>
  </data>
  <data name="CmdLineOutputDir" xml:space="preserve">
    <value>outdir</value>
  </data>
  <data name="CmdLinePath" xml:space="preserve">
    <value>шлях</value>
  </data>
  <data name="ExampleDescription1" xml:space="preserve">
    <value>Декомпілювати усі файли .NET в каталозі вище та зберегти файли в C:\out\path</value>
  </data>
  <data name="ExampleDescription2" xml:space="preserve">
    <value>Декомпілювати усі файли .NET в каталозі вище та у всіх підкаталогах</value>
  </data>
  <data name="ExampleDescription3" xml:space="preserve">
    <value>Декомпілювати усі файли *.dll .NET в каталозі вище та зберегти файли в C:\out\path</value>
  </data>
  <data name="ExampleDescription4" xml:space="preserve">
    <value>Декомпілювати член із токеном 0x06000123</value>
  </data>
  <data name="ExampleDescription5" xml:space="preserve">
    <value>Декомпілює System.Int32 із mscorlib</value>
  </data>
  <data name="ExamplesHeader" xml:space="preserve">
    <value>Приклад:</value>
  </data>
  <data name="UsageHeader" xml:space="preserve">
    <value>[options] [fileOrDir1] [fileOrDir2] [...]</value>
  </data>
  <data name="CmdLineDescription_NoColor" xml:space="preserve">
    <value>не розфарбувати текст</value>
  </data>
  <data name="CmdLineDescription_Spaces" xml:space="preserve">
    <value>Розмір табулятора в прогалинах або 0 для використання одного табу</value>
  </data>
  <data name="InvalidSpacesArgument" xml:space="preserve">
    <value>Кількість прогалин має бути між {0} та {1}</value>
  </data>
  <data name="MissingArgument" xml:space="preserve">
    <value>Пропущений аргумент</value>
  </data>
</root>
