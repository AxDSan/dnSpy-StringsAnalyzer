<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <Import Project="..\..\DnSpyCommon.props" />

  <PropertyGroup>
    <Copyright>$(DnSpyAssemblyCopyright)</Copyright>
    <Version>$(DnSpyAssemblyVersion)</Version>
    <InformationalVersion>$(DnSpyAssemblyInformationalVersion)</InformationalVersion>

    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\dnSpy.snk</AssemblyOriginatorKeyFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\dnSpy.Contracts.Logic\dnSpy.Contracts.Logic.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\dnSpy.Contracts.DnSpy.Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>dnSpy.Contracts.DnSpy.Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\dnSpy.Contracts.DnSpy.Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>dnSpy.Contracts.DnSpy.Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Ookii.Dialogs.Wpf" Version="$(OokiiDialogsWpfVersion)" />
    <!--TODO: This is a workaround for a bug where we get the wrong version of System.Security.Permissions.
    Microsoft.VisualStudio.Composition.NetFxAttributes and Microsoft.VisualStudio.Composition reference
    System.ComponentModel.Composition 4.5.0 which references System.Security.Permissions 4.5.0 which has
    assembly version 4.0.1.0. The runtime has asm version 4.0.2.0. This library is copied to the output dir
    overwriting the 4.0.2.0 file because CopyLocalLockFileAssemblies=true in DnSpyCommon.props (to prevent
    us having to publish all extensions).
    Will probably be fixed after Microsoft.VisualStudio.Composition.NetFxAttributes and Microsoft.VisualStudio.Composition
    reference a newer System.ComponentModel.Composition nuget in which case this hack can be removed.
    -->
    <PackageReference Include="System.ComponentModel.Composition" Version="$(SCCompositionVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Language.Intellisense" Version="$(MSVSIntellisenseVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Text.UI.Wpf" Version="$(MSVSTextVersion)" />
  </ItemGroup>

</Project>
