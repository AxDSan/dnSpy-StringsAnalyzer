<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClassesToolTip" xml:space="preserve">
    <value>Classes</value>
  </data>
  <data name="CompilerSettings_AllowUnsafe" xml:space="preserve">
    <value>Permitir código não seguro</value>
  </data>
  <data name="CompilerSettings_CheckOverflow" xml:space="preserve">
    <value>Verificar estouro aritmético/estouro negativo</value>
  </data>
  <data name="CompilerSettings_EmbedVBRuntime" xml:space="preserve">
    <value>Incorporar o tempo de execução do Visual Basic</value>
  </data>
  <data name="CompilerSettings_Optimize" xml:space="preserve">
    <value>Otimizar o código</value>
  </data>
  <data name="CompilerSettings_OptionCompareBinary" xml:space="preserve">
    <value>Opção de comparação: binário</value>
  </data>
  <data name="CompilerSettings_OptionExplicit" xml:space="preserve">
    <value>Opção explícita</value>
  </data>
  <data name="CompilerSettings_OptionInfer" xml:space="preserve">
    <value>Opção infererir</value>
  </data>
  <data name="CompilerSettings_OptionStrict" xml:space="preserve">
    <value>Opção estrita</value>
  </data>
  <data name="CompilerSettings_PreprocessorSymbols" xml:space="preserve">
    <value>Símbolos de compilação condicional</value>
  </data>
  <data name="CompletionSet_All" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="ConstantsToolTip" xml:space="preserve">
    <value>Contantes</value>
  </data>
  <data name="DebuggerExpressionHasNoValue" xml:space="preserve">
    <value>A expressão foi avaliada e não possui resultados</value>
  </data>
  <data name="DebuggerVarsWindow_CSharp_StaticMembers" xml:space="preserve">
    <value>Membros estáticos</value>
  </data>
  <data name="DebuggerVarsWindow_DynamicView" xml:space="preserve">
    <value>Exibição Dinâmica</value>
  </data>
  <data name="DebuggerVarsWindow_Error_PropertyName" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="DebuggerVarsWindow_ExpandDynamicViewMessage" xml:space="preserve">
    <value>Expandir a visão dinâmica obterá os membros dinâmicos para o objeto</value>
  </data>
  <data name="DebuggerVarsWindow_ExpandResultsViewMessage" xml:space="preserve">
    <value>Expandir a exibição de resultados irá enumerar o IEnumerable</value>
  </data>
  <data name="DebuggerVarsWindow_InstanceMembers" xml:space="preserve">
    <value>Membros de instância</value>
  </data>
  <data name="DebuggerVarsWindow_RawView" xml:space="preserve">
    <value>Visualização RAW</value>
  </data>
  <data name="DebuggerVarsWindow_ResultsView" xml:space="preserve">
    <value>Exibição de resultados</value>
  </data>
  <data name="DebuggerVarsWindow_VisualBasic_SharedMembers" xml:space="preserve">
    <value>Membros compartilhados</value>
  </data>
  <data name="DelegatesToolTip" xml:space="preserve">
    <value>Delegates</value>
  </data>
  <data name="DynamicViewAssemblyNotLoaded" xml:space="preserve">
    <value>Exibição dinâmica requer que {0} seja referenciado</value>
  </data>
  <data name="DynamicView_MustBeDynamicOrComType" xml:space="preserve">
    <value>Somente COM ou objetos dinâmicos podem ter exibições dinâmicas</value>
  </data>
  <data name="EnumsToolTip" xml:space="preserve">
    <value>Enums</value>
  </data>
  <data name="EventsToolTip" xml:space="preserve">
    <value>Eventos</value>
  </data>
  <data name="ExtensionMethodsToolTip" xml:space="preserve">
    <value>Métodos de extensão</value>
  </data>
  <data name="FieldsToolTip" xml:space="preserve">
    <value>Campos</value>
  </data>
  <data name="FilterExpressionEvaluator_CompiledExpressionThrewAnException" xml:space="preserve">
    <value>Expressão compilada emitiu uma exceção: {0}</value>
  </data>
  <data name="FilterExpressionEvaluator_InvalidExpression" xml:space="preserve">
    <value>A expressão é inválida</value>
  </data>
  <data name="InterfacesToolTip" xml:space="preserve">
    <value>Interfaces</value>
  </data>
  <data name="KeywordsToolTip" xml:space="preserve">
    <value>Palavras-Chave</value>
  </data>
  <data name="LocalsAndParametersToolTip" xml:space="preserve">
    <value>Locais e parâmetros</value>
  </data>
  <data name="LocalsWindow_MethodOrProperty_Returned" xml:space="preserve">
    <value>{0} retornado</value>
  </data>
  <data name="LocalsWindow_TypeVariables" xml:space="preserve">
    <value>Variáveis do tipo</value>
  </data>
  <data name="MethodsToolTip" xml:space="preserve">
    <value>Métodos</value>
  </data>
  <data name="ModulesToolTip" xml:space="preserve">
    <value>Módulos</value>
  </data>
  <data name="NamespacesToolTip" xml:space="preserve">
    <value>Namespaces</value>
  </data>
  <data name="PropertiesToolTip" xml:space="preserve">
    <value>Propriedades</value>
  </data>
  <data name="ResultsView_MustBeEnumerableType" xml:space="preserve">
    <value>Apenas tipos enumeráveis podem ter visualização de resultados</value>
  </data>
  <data name="SnippetsToolTip" xml:space="preserve">
    <value>Snippets</value>
  </data>
  <data name="StructuresToolTip" xml:space="preserve">
    <value>Estruturas</value>
  </data>
  <data name="SystemCoreDllNotLoaded" xml:space="preserve">
    <value>Exibição de resultados requer {0} para ser referenciado</value>
  </data>
  <data name="TypeDoesNotExistInAssembly" xml:space="preserve">
    <value>Tipo '{0}' não existe no assembly '{1}'</value>
  </data>
</root>